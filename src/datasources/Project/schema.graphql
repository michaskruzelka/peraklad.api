type Query {
    projectAccessTypes: [ProjectAccessType!]!
    defaultProjectAccessType: ProjectAccessType!
    imdbSubtitles(
        languages: [String!]! @stringLength(min: 2, max: 2)
        imdbId: String! @stringLength(min: 7, max: 9)
        season: Int @range(min: 0, max: 100)
        episode: Int @range(min: 0, max: 100)
        limit: Int @range(min: 0, max: 10)
    ): ImdbSubtitlesResponse
}

type ImdbSubtitlesResponse {
    service: SubtitlesSearchService!
    filesInfo: [ImdbSubtitlesFile]!
}

type ImdbSubtitlesFile {
    url: String!
    fileName: String!
    encoding: String!
    format: FileFormat!
    language: Language!
}

type SubtitlesSearchService {
    code: String!
    name: String!
}

type ProjectAccessType {
    id: Int!
    code: String!
    isDefault: Boolean!
}

interface Project {
    id: ID!
    name: String!
    type: Int!
    accessType: ProjectAccessType!
    createdAt: DateTime!
    updatedAt: DateTime!
    description: String
    # resource: Resource @relation(name: "TRANSLATING", direction: OUT)
}

type MovieSubtitles implements Project {
    id: ID!
    name: String!
    type: Int!
    accessType: ProjectAccessType! @neo4j_ignore
    createdAt: DateTime!
    updatedAt: DateTime!
    description: String
    # imdb: [IMDB] @relation(name: "HAS_INFO", direction: OUT)
}

# type VideoStreamSubtitles implements Project {

# }
